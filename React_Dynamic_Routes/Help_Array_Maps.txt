

if you pass array as this way in a functional component 
function App() {
  return (
    <div>
      <Navbar
        CompanyName="Test"
        LinksList={["Contact Us ", "About Us", "Home"]} --this
        Links={obj}
      />
    </div>
  );
}
export default App;
then u can map it via 

{React.Children.toArray(
            props.LinksList.map((item, i) => (
              <li>
                <a className="nav-link" href="#" key={i}>
                  {item}
                </a>
              </li>
            ))
          )}


case two if array is list of dictionaries 
example

const obj = [
  {
    name: "Home",
    href: "/home",
    icon: "fa fa-eye"
  },

  {
    name: "Contact us ",
    href: "/contactus",
    icon: "fa fa-eye"
  },

  {
    name: "About Us",
    href: "/aboutus",
    icon: "fa fa-eye"
  }
];

and is passed like this the 
 <Navbar
        CompanyName="Test"
        LinksList={["Contact Us ", "About Us", "Home"]} --this
        Links={obj}
      />


you can map it via 

 {props.Links.map(link => (
            <li className="nav-item ">
              <a className="nav-link" href={link.href} />
              <i className={link.icon} />
              {link.name}
            </li>
          ))}