{"ast":null,"code":"var _jsxFileName = \"/home/hadooop/Desktop/development/reactjs_project/React_Dynamic_Routes/React_Dynamic_Routes/src/pages/Signup.js\";\nimport React from \"react\";\nimport { useForm } from \"react-hook-form\";\nexport default function Signup() {\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  var submit = function submit(data) {\n    console.log(data);\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit(submit),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 13\n    }\n  }, \"first name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"first_name\",\n    className: \"form-control\",\n    ref: register({\n      required: \"First name is required\",\n      minLength: {\n        value: 5,\n        message: \"First name should have minimum 8 charachters \"\n      },\n      maxLength: {\n        value: 5,\n        message: \"First name should have maximum 14 charachters \"\n      }\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }\n  }), errors.first_name && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 15\n    }\n  }, \"first name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, \"last name\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"last_name\",\n    className: \"form-control\",\n    ref: register({\n      required: \"Last name is required\",\n      minLength: {\n        value: 5,\n        message: \"Last name should have minimum 8 charachters \"\n      },\n      maxLength: {\n        value: 5,\n        message: \"Last name should have maximum 14 charachters \"\n      }\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }), errors.last_name && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 15\n    }\n  }, \"first name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }, \"email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"email\",\n    name: \"email\",\n    className: \"form-control\",\n    ref: register({\n      required: \"Email is required\"\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), errors.email && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 15\n    }\n  }, \"first name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }\n  }, \"username\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    name: \"username\",\n    className: \"form-control\",\n    ref: register({\n      required: \"Username name is required\",\n      minLength: {\n        value: 5,\n        message: \"Username should have minimum 8 charachters \"\n      },\n      maxLength: {\n        value: 5,\n        message: \"Username should have maximum 14 charachters \"\n      }\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }\n  }), errors.username && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 15\n    }\n  }, \"first name is required\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"btn \",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, \"password\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"password\",\n    name: \"password\",\n    className: \"form-control\",\n    ref: register({\n      required: \"Password is required\",\n      minLength: 5,\n      maxLength: 14\n    }),\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }\n  }), errors.password && /*#__PURE__*/React.createElement(\"p\", {\n    className: \"text-info\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 15\n    }\n  }, \"first name is required\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"submit\",\n    className: \"btn btn-sm btn-success\",\n    name: \"submit\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/hadooop/Desktop/development/reactjs_project/React_Dynamic_Routes/React_Dynamic_Routes/src/pages/Signup.js"],"names":["React","useForm","Signup","register","handleSubmit","errors","submit","data","console","log","required","minLength","value","message","maxLength","first_name","last_name","email","username","password"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,eAAe,SAASC,MAAT,GAAkB;AAAA,iBACYD,OAAO,EADnB;AAAA,MACvBE,QADuB,YACvBA,QADuB;AAAA,MACbC,YADa,YACbA,YADa;AAAA,MACCC,MADD,YACCA,MADD;;AAE/B,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,IAAD,EAAU;AACvBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,IAAZ;AACD,GAFD;;AAGA,sBACE;AAAK,IAAA,SAAS,EAAC,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAM,IAAA,QAAQ,EAAEH,YAAY,CAACE,MAAD,CAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,YAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,GAAG,EAAEH,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,wBADE;AAEZC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA,OAFC;AAMZC,MAAAA,SAAS,EAAE;AACTF,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA;AANC,KAAD,CAJf;AAeE,IAAA,QAAQ,MAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAmBGR,MAAM,CAACU,UAAP,iBACC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBJ,CADF,eAwBE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,WAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,GAAG,EAAEZ,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,uBADE;AAEZC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA,OAFC;AAMZC,MAAAA,SAAS,EAAE;AACTF,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA;AANC,KAAD,CAJf;AAeE,IAAA,QAAQ,MAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAmBGR,MAAM,CAACW,SAAP,iBACC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBJ,CAxBF,eA+CE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,eAEE;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,IAAI,EAAC,OAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,GAAG,EAAEb,QAAQ,CAAC;AAAEO,MAAAA,QAAQ,EAAE;AAAZ,KAAD,CAJf;AAKE,IAAA,QAAQ,MALV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EASGL,MAAM,CAACY,KAAP,iBACC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAVJ,CA/CF,eA4DE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,GAAG,EAAEd,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,2BADE;AAEZC,MAAAA,SAAS,EAAE;AACTC,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA,OAFC;AAMZC,MAAAA,SAAS,EAAE;AACTF,QAAAA,KAAK,EAAE,CADE;AAETC,QAAAA,OAAO,EAAE;AAFA;AANC,KAAD,CAJf;AAeE,IAAA,QAAQ,MAfV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAmBGR,MAAM,CAACa,QAAP,iBACC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BApBJ,CA5DF,eAmFE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAO,IAAA,SAAS,EAAC,MAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,IAAI,EAAC,UAFP;AAGE,IAAA,SAAS,EAAC,cAHZ;AAIE,IAAA,GAAG,EAAEf,QAAQ,CAAC;AACZO,MAAAA,QAAQ,EAAE,sBADE;AAEZC,MAAAA,SAAS,EAAE,CAFC;AAGZG,MAAAA,SAAS,EAAE;AAHC,KAAD,CAJf;AASE,IAAA,QAAQ,MATV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAaGT,MAAM,CAACc,QAAP,iBACC;AAAG,IAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAdJ,CAnFF,eAoGE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,wBAFZ;AAGE,IAAA,IAAI,EAAC,QAHP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IApGF,CADF,CAFF,eA8GE;AAAK,IAAA,SAAS,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IA9GF,CADF;AAkHD","sourcesContent":["import React from \"react\";\nimport { useForm } from \"react-hook-form\";\nexport default function Signup() {\n  const { register, handleSubmit, errors } = useForm();\n  const submit = (data) => {\n    console.log(data);\n  };\n  return (\n    <div className=\"row\">\n      <div className=\"col-md-3\"></div>\n      <div className=\"col-md-6\">\n        <form onSubmit={handleSubmit(submit)}>\n          <div className=\"form-row\">\n            <label className=\"btn \">first name</label>\n            <input\n              type=\"text\"\n              name=\"first_name\"\n              className=\"form-control\"\n              ref={register({\n                required: \"First name is required\",\n                minLength: {\n                  value: 5,\n                  message: \"First name should have minimum 8 charachters \",\n                },\n                maxLength: {\n                  value: 5,\n                  message: \"First name should have maximum 14 charachters \",\n                },\n              })}\n              required\n            />\n            {errors.first_name && (\n              <p className=\"text-info\">first name is required</p>\n            )}\n          </div>\n          <div className=\"form-row\">\n            <label className=\"btn \">last name</label>\n            <input\n              type=\"text\"\n              name=\"last_name\"\n              className=\"form-control\"\n              ref={register({\n                required: \"Last name is required\",\n                minLength: {\n                  value: 5,\n                  message: \"Last name should have minimum 8 charachters \",\n                },\n                maxLength: {\n                  value: 5,\n                  message: \"Last name should have maximum 14 charachters \",\n                },\n              })}\n              required\n            />\n            {errors.last_name && (\n              <p className=\"text-info\">first name is required</p>\n            )}\n          </div>\n          <div className=\"form-row\">\n            <label className=\"btn \">email</label>\n            <input\n              type=\"email\"\n              name=\"email\"\n              className=\"form-control\"\n              ref={register({ required: \"Email is required\" })}\n              required\n            />\n            {errors.email && (\n              <p className=\"text-info\">first name is required</p>\n            )}\n          </div>\n          <div className=\"form-row\">\n            <label className=\"btn \">username</label>\n            <input\n              type=\"text\"\n              name=\"username\"\n              className=\"form-control\"\n              ref={register({\n                required: \"Username name is required\",\n                minLength: {\n                  value: 5,\n                  message: \"Username should have minimum 8 charachters \",\n                },\n                maxLength: {\n                  value: 5,\n                  message: \"Username should have maximum 14 charachters \",\n                },\n              })}\n              required\n            />\n            {errors.username && (\n              <p className=\"text-info\">first name is required</p>\n            )}\n          </div>\n          <div className=\"form-row\">\n            <label className=\"btn \">password</label>\n            <input\n              type=\"password\"\n              name=\"password\"\n              className=\"form-control\"\n              ref={register({\n                required: \"Password is required\",\n                minLength: 5,\n                maxLength: 14,\n              })}\n              required\n            />\n            {errors.password && (\n              <p className=\"text-info\">first name is required</p>\n            )}\n          </div>\n          <input\n            type=\"submit\"\n            className=\"btn btn-sm btn-success\"\n            name=\"submit\"\n          />\n        </form>\n      </div>\n      <div className=\"col-md-3\"></div>\n    </div>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}