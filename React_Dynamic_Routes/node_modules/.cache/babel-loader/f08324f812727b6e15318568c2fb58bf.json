{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/REACTJS/test/React_Dynamic_Routes/src/components/Protected/ProtectedRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./Auth\";\nexport const ProtectedRoute = ({\n  component: Component,\n  ...rest\n}) => {\n  let User = JSON.parse(localStorage.getItem(\"logged_user\"));\n  const Auth = false;\n\n  if (User == null) {\n    console.log(\"NO USER LOGGED  -- PROTECTED ROUTE\");\n  } else {\n    console.log(\"USER LOGGED IN -- PROTECTED ROUTE \");\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (auth.isAuthenticated()) {\n        return /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 18\n          }\n        }));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/home/asd/Desktop/development/REACTJS/test/React_Dynamic_Routes/src/components/Protected/ProtectedRoute.jsx"],"names":["React","Route","Redirect","auth","ProtectedRoute","component","Component","rest","User","JSON","parse","localStorage","getItem","Auth","console","log","props","isAuthenticated","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwB,KAAGC;AAA3B,CAAD,KAAuC;AACnE,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAX;AACA,QAAMC,IAAI,GAAC,KAAX;;AACA,MAAIL,IAAI,IAAI,IAAZ,EAAkB;AAEhBM,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD,GAHD,MAGO;AAELD,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD;;AACD,sBACE,oBAAC,KAAD,oBACMR,IADN;AAEE,IAAA,MAAM,EAAGS,KAAD,IAAW;AACjB,UAAIb,IAAI,CAACc,eAAL,EAAJ,EAA4B;AAC1B,4BAAO,oBAAC,SAAD,oBAAeD,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,OAFD,MAEO;AACL,4BACE,oBAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFE,YAAAA,QAAQ,EAAE,GADR;AAEFC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAEJ,KAAK,CAACK;AADP;AAFL,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AACF,KAjBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AAqBD,CA/BM","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./Auth\";\n\nexport const ProtectedRoute = ({ component: Component, ...rest }) => {\n  let User = JSON.parse(localStorage.getItem(\"logged_user\"));\n  const Auth=false\n  if (User == null) {\n        \n    console.log(\"NO USER LOGGED  -- PROTECTED ROUTE\");\n  } else {\n  \n    console.log(\"USER LOGGED IN -- PROTECTED ROUTE \");\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (auth.isAuthenticated()) {\n          return <Component {...props} />;\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}