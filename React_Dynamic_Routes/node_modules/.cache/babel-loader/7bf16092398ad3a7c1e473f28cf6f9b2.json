{"ast":null,"code":"import _regeneratorRuntime from \"/home/hadooop/Desktop/development/reactjs_project/React_Dynamic_Routes/React_Dynamic_Routes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/hadooop/Desktop/development/reactjs_project/React_Dynamic_Routes/React_Dynamic_Routes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"/home/hadooop/Desktop/development/reactjs_project/React_Dynamic_Routes/React_Dynamic_Routes/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport { transformToNestObject, appendErrors } from 'react-hook-form';\n\nvar parseErrorSchema = function parseErrorSchema(error, validateAllFieldCriteria) {\n  return Array.isArray(error.inner) && error.inner.length ? error.inner.reduce(function (previous, _ref) {\n    var path = _ref.path,\n        message = _ref.message,\n        type = _ref.type;\n    var previousTypes = previous[path] && previous[path].types || {};\n    return Object.assign(Object.assign({}, previous), path ? {\n      [path]: Object.assign(Object.assign({}, previous[path] || {\n        message,\n        type\n      }), validateAllFieldCriteria ? {\n        types: Object.assign(Object.assign({}, previousTypes), {\n          [type]: previousTypes[type] ? [].concat(_toConsumableArray([].concat(previousTypes[type])), [message]) : message\n        })\n      } : {})\n    } : {});\n  }, {}) : {\n    [error.path]: {\n      message: error.message,\n      type: error.type\n    }\n  };\n};\n\nvar yupResolver = function yupResolver(schema) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    abortEarly: false\n  };\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, context) {\n      var validateAllFieldCriteria,\n          parsedErrors,\n          _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              validateAllFieldCriteria = _args.length > 2 && _args[2] !== undefined ? _args[2] : false;\n              _context.prev = 1;\n\n              if (options.context && process.env.NODE_ENV === 'development') {\n                // eslint-disable-next-line no-console\n                console.warn(\"You should not used the yup options context. Please, use the 'useForm' context object instead\");\n              }\n\n              _context.next = 5;\n              return schema.validate(values, Object.assign(Object.assign({}, options), {\n                context\n              }));\n\n            case 5:\n              _context.t0 = _context.sent;\n              _context.t1 = {};\n              return _context.abrupt(\"return\", {\n                values: _context.t0,\n                errors: _context.t1\n              });\n\n            case 10:\n              _context.prev = 10;\n              _context.t2 = _context[\"catch\"](1);\n              parsedErrors = parseErrorSchema(_context.t2, validateAllFieldCriteria);\n              return _context.abrupt(\"return\", {\n                values: {},\n                errors: validateAllFieldCriteria ? parsedErrors : transformToNestObject(parsedErrors)\n              });\n\n            case 14:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 10]]);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\n\nvar convertArrayToPathName = function convertArrayToPathName(paths) {\n  return paths.reduce(function (previous, path, index) {\n    return \"\".concat(previous).concat(typeof path === 'string' ? \"\".concat(index > 0 ? '.' : '').concat(path) : \"[\".concat(path, \"]\"));\n  }, '').toString();\n};\n\nvar parseErrorSchema$1 = function parseErrorSchema$1(error, validateAllFieldCriteria) {\n  return Array.isArray(error.failures) ? error.failures.reduce(function (previous, _ref3) {\n    var path = _ref3.path,\n        _ref3$message = _ref3.message,\n        message = _ref3$message === void 0 ? '' : _ref3$message,\n        type = _ref3.type;\n    var currentPath = convertArrayToPathName(path);\n    return Object.assign(Object.assign({}, previous), path ? previous[currentPath] && validateAllFieldCriteria ? {\n      [currentPath]: appendErrors(currentPath, validateAllFieldCriteria, previous, type || '', message)\n    } : {\n      [currentPath]: previous[currentPath] || Object.assign({\n        message,\n        type\n      }, validateAllFieldCriteria ? {\n        types: {\n          [type || '']: message || true\n        }\n      } : {})\n    } : {});\n  }, {}) : [];\n};\n\nvar superstructResolver = function superstructResolver(schema) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(values, _) {\n      var validateAllFieldCriteria,\n          _args2 = arguments;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              validateAllFieldCriteria = _args2.length > 2 && _args2[2] !== undefined ? _args2[2] : false;\n              _context2.prev = 1;\n              return _context2.abrupt(\"return\", {\n                values: schema(values),\n                errors: {}\n              });\n\n            case 5:\n              _context2.prev = 5;\n              _context2.t0 = _context2[\"catch\"](1);\n              return _context2.abrupt(\"return\", {\n                values: {},\n                errors: transformToNestObject(parseErrorSchema$1(_context2.t0, validateAllFieldCriteria))\n              });\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 5]]);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\nvar parseErrorSchema$2 = function parseErrorSchema$2(error, validateAllFieldCriteria) {\n  return Array.isArray(error.details) ? error.details.reduce(function (previous, _ref5) {\n    var path = _ref5.path,\n        _ref5$message = _ref5.message,\n        message = _ref5$message === void 0 ? '' : _ref5$message,\n        type = _ref5.type;\n    var currentPath = convertArrayToPathName(path);\n    return Object.assign(Object.assign({}, previous), path ? previous[currentPath] && validateAllFieldCriteria ? {\n      [currentPath]: appendErrors(currentPath, validateAllFieldCriteria, previous, type, message)\n    } : {\n      [currentPath]: previous[currentPath] || Object.assign({\n        message,\n        type\n      }, validateAllFieldCriteria ? {\n        types: {\n          [type]: message || true\n        }\n      } : {})\n    } : {});\n  }, {}) : [];\n};\n\nvar joiResolver = function joiResolver(schema) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    abortEarly: false\n  };\n  return /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(values, _) {\n      var validateAllFieldCriteria,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              validateAllFieldCriteria = _args3.length > 2 && _args3[2] !== undefined ? _args3[2] : false;\n              _context3.prev = 1;\n              _context3.next = 4;\n              return schema.validateAsync(values, Object.assign({}, options));\n\n            case 4:\n              _context3.t0 = _context3.sent;\n              _context3.t1 = {};\n              return _context3.abrupt(\"return\", {\n                values: _context3.t0,\n                errors: _context3.t1\n              });\n\n            case 9:\n              _context3.prev = 9;\n              _context3.t2 = _context3[\"catch\"](1);\n              return _context3.abrupt(\"return\", {\n                values: {},\n                errors: transformToNestObject(parseErrorSchema$2(_context3.t2, validateAllFieldCriteria))\n              });\n\n            case 12:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3, null, [[1, 9]]);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref6.apply(this, arguments);\n    };\n  }();\n};\n\nexport { joiResolver, superstructResolver, yupResolver };","map":null,"metadata":{},"sourceType":"module"}