{"ast":null,"code":"import cookie from 'js-cookie';\nimport { GoogleLogout } from 'react-google-login'; // Set in Cookie\n\nexport var setCookie = function setCookie(key, value) {\n  if (window !== 'undefiend') {\n    cookie.set(key, value, {\n      // 1 Day\n      expires: 1\n    });\n  }\n}; // remove from cookie\n\nexport var removeCookie = function removeCookie(key) {\n  if (window !== 'undefined') {\n    cookie.remove(key, {\n      expires: 1\n    });\n  }\n}; // Get from cookie such as stored token\n// Will be useful when we need to make request to server with token\n\nexport var getCookie = function getCookie(key) {\n  if (window !== 'undefined') {\n    return cookie.get(key);\n  }\n}; // Set in localstorage\n\nexport var setLocalStorage = function setLocalStorage(key, value) {\n  if (window !== 'undefined') {\n    localStorage.setItem(key, JSON.stringify(value));\n  }\n}; // Remove from localstorage\n\nexport var removeLocalStorage = function removeLocalStorage(key) {\n  if (window !== 'undefined') {\n    localStorage.removeItem(key);\n  }\n}; // Auth enticate user by passing data to cookie and localstorage during signin\n\nexport var authenticate = function authenticate(response, next) {\n  console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\n  setCookie('token', response.data.token);\n  setLocalStorage('user', response.data.user);\n  next();\n}; // Access user info from localstorage\n\nexport var isAuth = function isAuth() {\n  if (window !== 'undefined') {\n    var cookieChecked = getCookie('token');\n\n    if (cookieChecked) {\n      if (localStorage.getItem('user')) {\n        return JSON.parse(localStorage.getItem('user'));\n      } else {\n        return false;\n      }\n    }\n  }\n};\nexport var signout = function signout(next) {\n  removeCookie('token');\n  removeLocalStorage('user');\n  next();\n};\nexport var updateUser = function updateUser(response, next) {\n  console.log('UPDATE USER IN LOCALSTORAGE HELPERS', response);\n\n  if (typeof window !== 'undefined') {\n    var auth = JSON.parse(localStorage.getItem('user'));\n    auth = response.data;\n    localStorage.setItem('user', JSON.stringify(auth));\n  }\n\n  next();\n};","map":{"version":3,"sources":["/home/hadooop/Desktop/development/reactjs_project/React_Dynamic_Routes/React_Dynamic_Routes/src/helpers/auth.js"],"names":["cookie","GoogleLogout","setCookie","key","value","window","set","expires","removeCookie","remove","getCookie","get","setLocalStorage","localStorage","setItem","JSON","stringify","removeLocalStorage","removeItem","authenticate","response","next","console","log","data","token","user","isAuth","cookieChecked","getItem","parse","signout","updateUser","auth"],"mappings":"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","sourcesContent":["import cookie from 'js-cookie'\nimport { GoogleLogout } from 'react-google-login';\n\n// Set in Cookie\nexport const setCookie = (key, value) => {\n    if (window !== 'undefiend') {\n        cookie.set(key, value, {\n            // 1 Day\n            expires: 1\n        }) \n    }\n}\n// remove from cookie\nexport const removeCookie = key => {\n    if (window !== 'undefined') {\n        cookie.remove(key, {\n            expires: 1\n        });\n    }\n};\n\n\n// Get from cookie such as stored token\n// Will be useful when we need to make request to server with token\nexport const getCookie = key => {\n    if (window !== 'undefined') {\n        return cookie.get(key);\n    }\n};\n\n// Set in localstorage\nexport const setLocalStorage = (key, value) => {\n    if (window !== 'undefined') {\n        localStorage.setItem(key, JSON.stringify(value));\n    }\n};\n\n// Remove from localstorage\nexport const removeLocalStorage = key => {\n    if (window !== 'undefined') {\n        localStorage.removeItem(key);\n    }\n};\n\n// Auth enticate user by passing data to cookie and localstorage during signin\nexport const authenticate = (response, next) => {\n    console.log('AUTHENTICATE HELPER ON SIGNIN RESPONSE', response);\n    setCookie('token', response.data.token);\n    setLocalStorage('user', response.data.user);\n    next();\n};\n\n// Access user info from localstorage\nexport const isAuth = () => {\n    if (window !== 'undefined') {\n        const cookieChecked = getCookie('token');\n        if (cookieChecked) {\n            if (localStorage.getItem('user')) {\n                return JSON.parse(localStorage.getItem('user'));\n            } else {\n                return false;\n            }\n        }\n    }\n};\n\nexport const signout = next => {\n    removeCookie('token');\n    removeLocalStorage('user');\n    next();\n};\n\nexport const updateUser = (response, next) => {\n    console.log('UPDATE USER IN LOCALSTORAGE HELPERS', response);\n    if (typeof window !== 'undefined') {\n        let auth = JSON.parse(localStorage.getItem('user'));\n        auth = response.data;\n        localStorage.setItem('user', JSON.stringify(auth));\n    }\n    next();\n};"]},"metadata":{},"sourceType":"module"}