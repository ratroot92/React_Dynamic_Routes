{"ast":null,"code":"var _jsxFileName = \"/home/asd/Desktop/development/REACTJS/test/React_Dynamic_Routes/src/components/Protected/ProtectedRoute.jsx\";\nimport React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./Auth\";\nimport Navbar from './../../layouts/Navbar';\nconst LinksList = [{\n  Page_Name: \"Home\",\n  Path: \"/home\",\n  Icon: \"fa fa-eye\",\n  Img: \"fa fa-eye\",\n  Class: \"font-weight-bold nav-link\",\n  Id: 1\n}, {\n  Page_Name: \"Contact\",\n  Path: \"/contact\",\n  Icon: \"fa fa-eye\",\n  Img: \"fa fa-eye\",\n  Class: \"font-weight-bold nav-link\",\n  Id: 2\n}, {\n  Page_Name: \"About\",\n  Path: \"/about\",\n  Icon: \"fa fa-eye\",\n  Img: \"fa fa-eye\",\n  Class: \"font-weight-bold nav-link\",\n  Id: 3\n}, {\n  Page_Name: \"FAQ\",\n  Path: \"/faq\",\n  Icon: \"fa fa-eye\",\n  Img: \"fa fa-eye\",\n  Class: \"font-weight-bold nav-link mr-5\",\n  Id: 4\n}];\nexport const ProtectedRoute = ({\n  component: Component,\n  setLoginStatus,\n  ...rest\n}) => {\n  let User = JSON.parse(localStorage.getItem(\"logged_user\"));\n  let Auth = false;\n\n  if (User == null) {\n    console.log(\"NO USER LOGGED  -- PROTECTED ROUTE\");\n  } else {\n    Auth = true;\n    console.log(\"USER LOGGED IN -- PROTECTED ROUTE \");\n  }\n\n  return /*#__PURE__*/React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      if (Auth) {\n        return /*#__PURE__*/React.createElement(React.Fragment, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(Navbar, {\n          CompanyName: \"React Node App\",\n          Links: LinksList,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 11\n          }\n        })));\n      } else {\n        return /*#__PURE__*/React.createElement(Redirect, {\n          to: {\n            pathname: \"/\",\n            state: {\n              from: props.location\n            }\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }));\n};","map":{"version":3,"sources":["/home/asd/Desktop/development/REACTJS/test/React_Dynamic_Routes/src/components/Protected/ProtectedRoute.jsx"],"names":["React","Route","Redirect","auth","Navbar","LinksList","Page_Name","Path","Icon","Img","Class","Id","ProtectedRoute","component","Component","setLoginStatus","rest","User","JSON","parse","localStorage","getItem","Auth","console","log","props","pathname","state","from","location"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,KAAT,EAAgBC,QAAhB,QAAgC,kBAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,MAAMC,SAAS,GAAG,CAChB;AACEC,EAAAA,SAAS,EAAE,MADb;AAEEC,EAAAA,IAAI,EAAE,OAFR;AAGEC,EAAAA,IAAI,EAAE,WAHR;AAIEC,EAAAA,GAAG,EAAE,WAJP;AAKEC,EAAAA,KAAK,EAAE,2BALT;AAMEC,EAAAA,EAAE,EAAE;AANN,CADgB,EAShB;AACEL,EAAAA,SAAS,EAAE,SADb;AAEEC,EAAAA,IAAI,EAAE,UAFR;AAGEC,EAAAA,IAAI,EAAE,WAHR;AAIEC,EAAAA,GAAG,EAAE,WAJP;AAKEC,EAAAA,KAAK,EAAE,2BALT;AAOEC,EAAAA,EAAE,EAAE;AAPN,CATgB,EAmBhB;AACEL,EAAAA,SAAS,EAAE,OADb;AAEEC,EAAAA,IAAI,EAAE,QAFR;AAGEC,EAAAA,IAAI,EAAE,WAHR;AAIEC,EAAAA,GAAG,EAAE,WAJP;AAKEC,EAAAA,KAAK,EAAE,2BALT;AAMEC,EAAAA,EAAE,EAAE;AANN,CAnBgB,EA2BhB;AACEL,EAAAA,SAAS,EAAE,KADb;AAEEC,EAAAA,IAAI,EAAE,MAFR;AAGEC,EAAAA,IAAI,EAAE,WAHR;AAIEC,EAAAA,GAAG,EAAE,WAJP;AAKEC,EAAAA,KAAK,EAAE,gCALT;AAOEC,EAAAA,EAAE,EAAE;AAPN,CA3BgB,CAAlB;AAqCA,OAAO,MAAMC,cAAc,GAAG,CAAC;AAAEC,EAAAA,SAAS,EAAEC,SAAb;AAAwBC,EAAAA,cAAxB;AAAwC,KAAGC;AAA3C,CAAD,KAAuD;AACnF,MAAIC,IAAI,GAAGC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,aAArB,CAAX,CAAX;AACA,MAAIC,IAAI,GAAC,KAAT;;AACA,MAAIL,IAAI,IAAI,IAAZ,EAAkB;AAChBM,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD,GAFD,MAEO;AACLF,IAAAA,IAAI,GAAC,IAAL;AAEAC,IAAAA,OAAO,CAACC,GAAR,CAAY,oCAAZ;AACD;;AACD,sBACE,oBAAC,KAAD,oBACMR,IADN;AAEE,IAAA,MAAM,EAAGS,KAAD,IAAW;AACjB,UAAIH,IAAJ,EAAU;AACR,4BACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACA,oBAAC,MAAD;AACA,UAAA,WAAW,EAAC,gBADZ;AAEA,UAAA,KAAK,EAAEjB,SAFP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADA,eAKF,oBAAC,SAAD,oBAAgBoB,KAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WALE,CADF;AAQD,OATD,MASO;AACL,4BACE,oBAAC,QAAD;AACE,UAAA,EAAE,EAAE;AACFC,YAAAA,QAAQ,EAAE,GADR;AAEFC,YAAAA,KAAK,EAAE;AACLC,cAAAA,IAAI,EAAEH,KAAK,CAACI;AADP;AAFL,WADN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;AACF,KAxBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF;AA4BD,CAtCM","sourcesContent":["import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport auth from \"./Auth\";\nimport Navbar from './../../layouts/Navbar';\nconst LinksList = [\n  {\n    Page_Name: \"Home\",\n    Path: \"/home\",\n    Icon: \"fa fa-eye\",\n    Img: \"fa fa-eye\",\n    Class: \"font-weight-bold nav-link\",\n    Id: 1,\n  },\n  {\n    Page_Name: \"Contact\",\n    Path: \"/contact\",\n    Icon: \"fa fa-eye\",\n    Img: \"fa fa-eye\",\n    Class: \"font-weight-bold nav-link\",\n\n    Id: 2,\n  },\n\n  {\n    Page_Name: \"About\",\n    Path: \"/about\",\n    Icon: \"fa fa-eye\",\n    Img: \"fa fa-eye\",\n    Class: \"font-weight-bold nav-link\",\n    Id: 3,\n  },\n  {\n    Page_Name: \"FAQ\",\n    Path: \"/faq\",\n    Icon: \"fa fa-eye\",\n    Img: \"fa fa-eye\",\n    Class: \"font-weight-bold nav-link mr-5\",\n\n    Id: 4,\n  },\n];\nexport const ProtectedRoute = ({ component: Component, setLoginStatus, ...rest }) => {\n  let User = JSON.parse(localStorage.getItem(\"logged_user\"));\n  let Auth=false;\n  if (User == null) {    \n    console.log(\"NO USER LOGGED  -- PROTECTED ROUTE\");\n  } else {\n    Auth=true;\n\n    console.log(\"USER LOGGED IN -- PROTECTED ROUTE \");\n  }\n  return (\n    <Route\n      {...rest}\n      render={(props) => {\n        if (Auth) {\n          return (\n            <React.Fragment>\n            <Navbar\n            CompanyName=\"React Node App\"\n            Links={LinksList}\n          />\n          <Component  {...props} />\n          </React.Fragment>);\n        } else {\n          return (\n            <Redirect\n              to={{\n                pathname: \"/\",\n                state: {\n                  from: props.location,\n                },\n              }}\n            />\n          );\n        }\n      }}\n    />\n  );\n};\n"]},"metadata":{},"sourceType":"module"}